// This file is auto-generated by @hey-api/openapi-ts

export const $CreateReportRequest = {
    type: 'object',
    properties: {
        text: {
            type: 'string',
            nullable: true
        },
        severity: {
            '$ref': '#/components/schemas/ReportSeverity'
        },
        target_id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $Error = {
    type: 'object',
    properties: {
        code: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        description: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        type: {
            '$ref': '#/components/schemas/ErrorType'
        },
        numericType: {
            type: 'integer',
            format: 'int32',
            readOnly: true
        },
        metadata: {
            type: 'object',
            additionalProperties: {},
            nullable: true,
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const $ErrorType = {
    enum: [0, 1, 2, 3, 4, 5, 6],
    type: 'integer',
    format: 'int32'
} as const;

export const $GenerateTokenResult = {
    type: 'object',
    properties: {
        isSuccess: {
            type: 'boolean',
            readOnly: true
        },
        access_token: {
            type: 'string',
            nullable: true
        },
        refresh_token: {
            type: 'string',
            nullable: true
        },
        expires: {
            type: 'string',
            format: 'date-time'
        },
        lifetime: {
            type: 'integer',
            format: 'int32'
        },
        type: {
            type: 'string',
            nullable: true
        },
        message: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $GetMeResponse = {
    type: 'object',
    properties: {
        sub: {
            type: 'string',
            nullable: true
        },
        username: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        is_confirmed: {
            type: 'boolean'
        },
        role: {
            type: 'string',
            nullable: true
        },
        avatar_url: {
            type: 'string',
            nullable: true
        },
        token_type: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $GetReportResponse = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        created_at: {
            type: 'string',
            format: 'date-time'
        },
        text: {
            type: 'string',
            nullable: true
        },
        severity: {
            '$ref': '#/components/schemas/ReportSeverity'
        },
        author_id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        is_resolved: {
            type: 'boolean'
        },
        resolved_at: {
            type: 'string',
            format: 'date-time',
            nullable: true
        },
        resolve_message: {
            type: 'string',
            nullable: true
        },
        resolved_by: {
            type: 'string',
            format: 'uuid',
            nullable: true
        },
        target_id: {
            type: 'string',
            format: 'uuid',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $LinkAccountRequest = {
    type: 'object',
    properties: {
        provider: {
            type: 'string',
            nullable: true
        },
        redirect_after: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $LoginRequest = {
    type: 'object',
    properties: {
        email: {
            type: 'string',
            nullable: true
        },
        password: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $RegisterRequest = {
    type: 'object',
    properties: {
        email: {
            type: 'string',
            nullable: true
        },
        password: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $ReportSeverity = {
    enum: [1, 2, 3, 4, 5],
    type: 'integer',
    format: 'int32'
} as const;

export const $SendConfirmationEmailRequest = {
    type: 'object',
    properties: {
        email: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $SendMagicLinkRequest = {
    type: 'object',
    properties: {
        email: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $SendMagicLinkResponse = {
    type: 'object',
    properties: {
        isSuccess: {
            type: 'boolean'
        },
        message: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const $Severity = {
    enum: [0, 1, 2],
    type: 'integer',
    format: 'int32'
} as const;

export const $UpdateReportRequest = {
    type: 'object',
    properties: {
        resolve: {
            type: 'boolean'
        },
        resolveMessage: {
            type: 'string',
            nullable: true
        },
        sendNotification: {
            type: 'boolean'
        }
    },
    additionalProperties: false
} as const;

export const $ValidationFailure = {
    type: 'object',
    properties: {
        propertyName: {
            type: 'string',
            nullable: true
        },
        errorMessage: {
            type: 'string',
            nullable: true
        },
        attemptedValue: {
            nullable: true
        },
        customState: {
            nullable: true
        },
        severity: {
            '$ref': '#/components/schemas/Severity'
        },
        errorCode: {
            type: 'string',
            nullable: true
        },
        formattedMessagePlaceholderValues: {
            type: 'object',
            additionalProperties: {
                nullable: true
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;